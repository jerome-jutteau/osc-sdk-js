/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.18
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateInternetServiceRequest,
    CreateInternetServiceRequestFromJSON,
    CreateInternetServiceRequestToJSON,
    CreateInternetServiceResponse,
    CreateInternetServiceResponseFromJSON,
    CreateInternetServiceResponseToJSON,
    DeleteInternetServiceRequest,
    DeleteInternetServiceRequestFromJSON,
    DeleteInternetServiceRequestToJSON,
    DeleteInternetServiceResponse,
    DeleteInternetServiceResponseFromJSON,
    DeleteInternetServiceResponseToJSON,
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    LinkInternetServiceRequest,
    LinkInternetServiceRequestFromJSON,
    LinkInternetServiceRequestToJSON,
    LinkInternetServiceResponse,
    LinkInternetServiceResponseFromJSON,
    LinkInternetServiceResponseToJSON,
    ReadInternetServicesRequest,
    ReadInternetServicesRequestFromJSON,
    ReadInternetServicesRequestToJSON,
    ReadInternetServicesResponse,
    ReadInternetServicesResponseFromJSON,
    ReadInternetServicesResponseToJSON,
    UnlinkInternetServiceRequest,
    UnlinkInternetServiceRequestFromJSON,
    UnlinkInternetServiceRequestToJSON,
    UnlinkInternetServiceResponse,
    UnlinkInternetServiceResponseFromJSON,
    UnlinkInternetServiceResponseToJSON,
} from '../models';

export interface CreateInternetServiceOperationRequest {
    createInternetServiceRequest?: CreateInternetServiceRequest;
}

export interface DeleteInternetServiceOperationRequest {
    deleteInternetServiceRequest?: DeleteInternetServiceRequest;
}

export interface LinkInternetServiceOperationRequest {
    linkInternetServiceRequest?: LinkInternetServiceRequest;
}

export interface ReadInternetServicesOperationRequest {
    readInternetServicesRequest?: ReadInternetServicesRequest;
}

export interface UnlinkInternetServiceOperationRequest {
    unlinkInternetServiceRequest?: UnlinkInternetServiceRequest;
}

/**
 * InternetServiceApi - interface
 * 
 * @export
 * @interface InternetServiceApiInterface
 */
export interface InternetServiceApiInterface {
    /**
     * 
     * @param {CreateInternetServiceRequest} [createInternetServiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternetServiceApiInterface
     */
    createInternetServiceRaw(requestParameters: CreateInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateInternetServiceResponse>>;

    /**
     */
    createInternetService(requestParameters: CreateInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<CreateInternetServiceResponse>;

    /**
     * 
     * @param {DeleteInternetServiceRequest} [deleteInternetServiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternetServiceApiInterface
     */
    deleteInternetServiceRaw(requestParameters: DeleteInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteInternetServiceResponse>>;

    /**
     */
    deleteInternetService(requestParameters: DeleteInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<DeleteInternetServiceResponse>;

    /**
     * 
     * @param {LinkInternetServiceRequest} [linkInternetServiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternetServiceApiInterface
     */
    linkInternetServiceRaw(requestParameters: LinkInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<LinkInternetServiceResponse>>;

    /**
     */
    linkInternetService(requestParameters: LinkInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<LinkInternetServiceResponse>;

    /**
     * 
     * @param {ReadInternetServicesRequest} [readInternetServicesRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternetServiceApiInterface
     */
    readInternetServicesRaw(requestParameters: ReadInternetServicesOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadInternetServicesResponse>>;

    /**
     */
    readInternetServices(requestParameters: ReadInternetServicesOperationRequest, initOverrides?: RequestInit): Promise<ReadInternetServicesResponse>;

    /**
     * 
     * @param {UnlinkInternetServiceRequest} [unlinkInternetServiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InternetServiceApiInterface
     */
    unlinkInternetServiceRaw(requestParameters: UnlinkInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UnlinkInternetServiceResponse>>;

    /**
     */
    unlinkInternetService(requestParameters: UnlinkInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<UnlinkInternetServiceResponse>;

}

/**
 * 
 */
export class InternetServiceApi extends runtime.BaseAPI implements InternetServiceApiInterface {

    /**
     */
    async createInternetServiceRaw(requestParameters: CreateInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateInternetServiceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/CreateInternetService`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateInternetServiceRequestToJSON(requestParameters.createInternetServiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateInternetServiceResponseFromJSON(jsonValue));
    }

    /**
     */
    async createInternetService(requestParameters: CreateInternetServiceOperationRequest = {}, initOverrides?: RequestInit): Promise<CreateInternetServiceResponse> {
        const response = await this.createInternetServiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteInternetServiceRaw(requestParameters: DeleteInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteInternetServiceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/DeleteInternetService`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DeleteInternetServiceRequestToJSON(requestParameters.deleteInternetServiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteInternetServiceResponseFromJSON(jsonValue));
    }

    /**
     */
    async deleteInternetService(requestParameters: DeleteInternetServiceOperationRequest = {}, initOverrides?: RequestInit): Promise<DeleteInternetServiceResponse> {
        const response = await this.deleteInternetServiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async linkInternetServiceRaw(requestParameters: LinkInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<LinkInternetServiceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/LinkInternetService`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LinkInternetServiceRequestToJSON(requestParameters.linkInternetServiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LinkInternetServiceResponseFromJSON(jsonValue));
    }

    /**
     */
    async linkInternetService(requestParameters: LinkInternetServiceOperationRequest = {}, initOverrides?: RequestInit): Promise<LinkInternetServiceResponse> {
        const response = await this.linkInternetServiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async readInternetServicesRaw(requestParameters: ReadInternetServicesOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadInternetServicesResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/ReadInternetServices`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ReadInternetServicesRequestToJSON(requestParameters.readInternetServicesRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadInternetServicesResponseFromJSON(jsonValue));
    }

    /**
     */
    async readInternetServices(requestParameters: ReadInternetServicesOperationRequest = {}, initOverrides?: RequestInit): Promise<ReadInternetServicesResponse> {
        const response = await this.readInternetServicesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async unlinkInternetServiceRaw(requestParameters: UnlinkInternetServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<UnlinkInternetServiceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/UnlinkInternetService`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UnlinkInternetServiceRequestToJSON(requestParameters.unlinkInternetServiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UnlinkInternetServiceResponseFromJSON(jsonValue));
    }

    /**
     */
    async unlinkInternetService(requestParameters: UnlinkInternetServiceOperationRequest = {}, initOverrides?: RequestInit): Promise<UnlinkInternetServiceResponse> {
        const response = await this.unlinkInternetServiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
