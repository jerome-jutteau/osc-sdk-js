/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.18
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import * as runtime from '../runtime.js';
import { CreateVolumeRequestToJSON, CreateVolumeResponseFromJSON, DeleteVolumeRequestToJSON, DeleteVolumeResponseFromJSON, LinkVolumeRequestToJSON, LinkVolumeResponseFromJSON, ReadVolumesRequestToJSON, ReadVolumesResponseFromJSON, UnlinkVolumeRequestToJSON, UnlinkVolumeResponseFromJSON, UpdateVolumeRequestToJSON, UpdateVolumeResponseFromJSON, } from '../models/index.js';
/**
 *
 */
export class VolumeApi extends runtime.BaseAPI {
    /**
     */
    createVolumeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
            }
            const response = yield this.request({
                path: `/CreateVolume`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: CreateVolumeRequestToJSON(requestParameters.createVolumeRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => CreateVolumeResponseFromJSON(jsonValue));
        });
    }
    /**
     */
    createVolume(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createVolumeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    deleteVolumeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
            }
            const response = yield this.request({
                path: `/DeleteVolume`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: DeleteVolumeRequestToJSON(requestParameters.deleteVolumeRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => DeleteVolumeResponseFromJSON(jsonValue));
        });
    }
    /**
     */
    deleteVolume(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.deleteVolumeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    linkVolumeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
            }
            const response = yield this.request({
                path: `/LinkVolume`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: LinkVolumeRequestToJSON(requestParameters.linkVolumeRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => LinkVolumeResponseFromJSON(jsonValue));
        });
    }
    /**
     */
    linkVolume(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.linkVolumeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    readVolumesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
            }
            const response = yield this.request({
                path: `/ReadVolumes`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: ReadVolumesRequestToJSON(requestParameters.readVolumesRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => ReadVolumesResponseFromJSON(jsonValue));
        });
    }
    /**
     */
    readVolumes(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.readVolumesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    unlinkVolumeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
            }
            const response = yield this.request({
                path: `/UnlinkVolume`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UnlinkVolumeRequestToJSON(requestParameters.unlinkVolumeRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => UnlinkVolumeResponseFromJSON(jsonValue));
        });
    }
    /**
     */
    unlinkVolume(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.unlinkVolumeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     */
    updateVolumeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
            }
            const response = yield this.request({
                path: `/UpdateVolume`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: UpdateVolumeRequestToJSON(requestParameters.updateVolumeRequest),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => UpdateVolumeResponseFromJSON(jsonValue));
        });
    }
    /**
     */
    updateVolume(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateVolumeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
