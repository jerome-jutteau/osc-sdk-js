/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.18
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateDirectLinkInterfaceRequest,
    CreateDirectLinkInterfaceRequestFromJSON,
    CreateDirectLinkInterfaceRequestToJSON,
    CreateDirectLinkInterfaceResponse,
    CreateDirectLinkInterfaceResponseFromJSON,
    CreateDirectLinkInterfaceResponseToJSON,
    DeleteDirectLinkInterfaceRequest,
    DeleteDirectLinkInterfaceRequestFromJSON,
    DeleteDirectLinkInterfaceRequestToJSON,
    DeleteDirectLinkInterfaceResponse,
    DeleteDirectLinkInterfaceResponseFromJSON,
    DeleteDirectLinkInterfaceResponseToJSON,
    ReadDirectLinkInterfacesRequest,
    ReadDirectLinkInterfacesRequestFromJSON,
    ReadDirectLinkInterfacesRequestToJSON,
    ReadDirectLinkInterfacesResponse,
    ReadDirectLinkInterfacesResponseFromJSON,
    ReadDirectLinkInterfacesResponseToJSON,
} from '../models';

export interface CreateDirectLinkInterfaceOperationRequest {
    createDirectLinkInterfaceRequest?: CreateDirectLinkInterfaceRequest;
}

export interface DeleteDirectLinkInterfaceOperationRequest {
    deleteDirectLinkInterfaceRequest?: DeleteDirectLinkInterfaceRequest;
}

export interface ReadDirectLinkInterfacesOperationRequest {
    readDirectLinkInterfacesRequest?: ReadDirectLinkInterfacesRequest;
}

/**
 * DirectLinkInterfaceApi - interface
 * 
 * @export
 * @interface DirectLinkInterfaceApiInterface
 */
export interface DirectLinkInterfaceApiInterface {
    /**
     * 
     * @param {CreateDirectLinkInterfaceRequest} [createDirectLinkInterfaceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectLinkInterfaceApiInterface
     */
    createDirectLinkInterfaceRaw(requestParameters: CreateDirectLinkInterfaceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateDirectLinkInterfaceResponse>>;

    /**
     */
    createDirectLinkInterface(requestParameters: CreateDirectLinkInterfaceOperationRequest, initOverrides?: RequestInit): Promise<CreateDirectLinkInterfaceResponse>;

    /**
     * 
     * @param {DeleteDirectLinkInterfaceRequest} [deleteDirectLinkInterfaceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectLinkInterfaceApiInterface
     */
    deleteDirectLinkInterfaceRaw(requestParameters: DeleteDirectLinkInterfaceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteDirectLinkInterfaceResponse>>;

    /**
     */
    deleteDirectLinkInterface(requestParameters: DeleteDirectLinkInterfaceOperationRequest, initOverrides?: RequestInit): Promise<DeleteDirectLinkInterfaceResponse>;

    /**
     * 
     * @param {ReadDirectLinkInterfacesRequest} [readDirectLinkInterfacesRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DirectLinkInterfaceApiInterface
     */
    readDirectLinkInterfacesRaw(requestParameters: ReadDirectLinkInterfacesOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadDirectLinkInterfacesResponse>>;

    /**
     */
    readDirectLinkInterfaces(requestParameters: ReadDirectLinkInterfacesOperationRequest, initOverrides?: RequestInit): Promise<ReadDirectLinkInterfacesResponse>;

}

/**
 * 
 */
export class DirectLinkInterfaceApi extends runtime.BaseAPI implements DirectLinkInterfaceApiInterface {

    /**
     */
    async createDirectLinkInterfaceRaw(requestParameters: CreateDirectLinkInterfaceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateDirectLinkInterfaceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/CreateDirectLinkInterface`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateDirectLinkInterfaceRequestToJSON(requestParameters.createDirectLinkInterfaceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateDirectLinkInterfaceResponseFromJSON(jsonValue));
    }

    /**
     */
    async createDirectLinkInterface(requestParameters: CreateDirectLinkInterfaceOperationRequest = {}, initOverrides?: RequestInit): Promise<CreateDirectLinkInterfaceResponse> {
        const response = await this.createDirectLinkInterfaceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteDirectLinkInterfaceRaw(requestParameters: DeleteDirectLinkInterfaceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteDirectLinkInterfaceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/DeleteDirectLinkInterface`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DeleteDirectLinkInterfaceRequestToJSON(requestParameters.deleteDirectLinkInterfaceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteDirectLinkInterfaceResponseFromJSON(jsonValue));
    }

    /**
     */
    async deleteDirectLinkInterface(requestParameters: DeleteDirectLinkInterfaceOperationRequest = {}, initOverrides?: RequestInit): Promise<DeleteDirectLinkInterfaceResponse> {
        const response = await this.deleteDirectLinkInterfaceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async readDirectLinkInterfacesRaw(requestParameters: ReadDirectLinkInterfacesOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadDirectLinkInterfacesResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/ReadDirectLinkInterfaces`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ReadDirectLinkInterfacesRequestToJSON(requestParameters.readDirectLinkInterfacesRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadDirectLinkInterfacesResponseFromJSON(jsonValue));
    }

    /**
     */
    async readDirectLinkInterfaces(requestParameters: ReadDirectLinkInterfacesOperationRequest = {}, initOverrides?: RequestInit): Promise<ReadDirectLinkInterfacesResponse> {
        const response = await this.readDirectLinkInterfacesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
