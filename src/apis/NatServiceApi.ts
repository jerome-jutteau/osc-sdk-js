/* tslint:disable */
/* eslint-disable */
/**
 * 3DS OUTSCALE API
 * Welcome to the OUTSCALE API documentation.<br /><br />  The OUTSCALE API enables you to manage your resources in the OUTSCALE Cloud. This documentation describes the different actions available along with code examples.<br /><br />  Note that the OUTSCALE Cloud is compatible with Amazon Web Services (AWS) APIs, but some resources have different names in AWS than in the OUTSCALE API. You can find a list of the differences [here](https://docs.outscale.com/en/userguide/OUTSCALE-APIs-Reference.html).<br /><br />  You can also manage your resources using the [Cockpit](https://docs.outscale.com/en/userguide/About-Cockpit.html) web interface.
 *
 * The version of the OpenAPI document: 1.18
 * Contact: support@outscale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CreateNatServiceRequest,
    CreateNatServiceRequestFromJSON,
    CreateNatServiceRequestToJSON,
    CreateNatServiceResponse,
    CreateNatServiceResponseFromJSON,
    CreateNatServiceResponseToJSON,
    DeleteNatServiceRequest,
    DeleteNatServiceRequestFromJSON,
    DeleteNatServiceRequestToJSON,
    DeleteNatServiceResponse,
    DeleteNatServiceResponseFromJSON,
    DeleteNatServiceResponseToJSON,
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ReadNatServicesRequest,
    ReadNatServicesRequestFromJSON,
    ReadNatServicesRequestToJSON,
    ReadNatServicesResponse,
    ReadNatServicesResponseFromJSON,
    ReadNatServicesResponseToJSON,
} from '../models';

export interface CreateNatServiceOperationRequest {
    createNatServiceRequest?: CreateNatServiceRequest;
}

export interface DeleteNatServiceOperationRequest {
    deleteNatServiceRequest?: DeleteNatServiceRequest;
}

export interface ReadNatServicesOperationRequest {
    readNatServicesRequest?: ReadNatServicesRequest;
}

/**
 * NatServiceApi - interface
 * 
 * @export
 * @interface NatServiceApiInterface
 */
export interface NatServiceApiInterface {
    /**
     * 
     * @param {CreateNatServiceRequest} [createNatServiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NatServiceApiInterface
     */
    createNatServiceRaw(requestParameters: CreateNatServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateNatServiceResponse>>;

    /**
     */
    createNatService(requestParameters: CreateNatServiceOperationRequest, initOverrides?: RequestInit): Promise<CreateNatServiceResponse>;

    /**
     * 
     * @param {DeleteNatServiceRequest} [deleteNatServiceRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NatServiceApiInterface
     */
    deleteNatServiceRaw(requestParameters: DeleteNatServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteNatServiceResponse>>;

    /**
     */
    deleteNatService(requestParameters: DeleteNatServiceOperationRequest, initOverrides?: RequestInit): Promise<DeleteNatServiceResponse>;

    /**
     * 
     * @param {ReadNatServicesRequest} [readNatServicesRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NatServiceApiInterface
     */
    readNatServicesRaw(requestParameters: ReadNatServicesOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadNatServicesResponse>>;

    /**
     */
    readNatServices(requestParameters: ReadNatServicesOperationRequest, initOverrides?: RequestInit): Promise<ReadNatServicesResponse>;

}

/**
 * 
 */
export class NatServiceApi extends runtime.BaseAPI implements NatServiceApiInterface {

    /**
     */
    async createNatServiceRaw(requestParameters: CreateNatServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<CreateNatServiceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/CreateNatService`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateNatServiceRequestToJSON(requestParameters.createNatServiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateNatServiceResponseFromJSON(jsonValue));
    }

    /**
     */
    async createNatService(requestParameters: CreateNatServiceOperationRequest = {}, initOverrides?: RequestInit): Promise<CreateNatServiceResponse> {
        const response = await this.createNatServiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async deleteNatServiceRaw(requestParameters: DeleteNatServiceOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<DeleteNatServiceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/DeleteNatService`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DeleteNatServiceRequestToJSON(requestParameters.deleteNatServiceRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeleteNatServiceResponseFromJSON(jsonValue));
    }

    /**
     */
    async deleteNatService(requestParameters: DeleteNatServiceOperationRequest = {}, initOverrides?: RequestInit): Promise<DeleteNatServiceResponse> {
        const response = await this.deleteNatServiceRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async readNatServicesRaw(requestParameters: ReadNatServicesOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ReadNatServicesResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/ReadNatServices`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ReadNatServicesRequestToJSON(requestParameters.readNatServicesRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadNatServicesResponseFromJSON(jsonValue));
    }

    /**
     */
    async readNatServices(requestParameters: ReadNatServicesOperationRequest = {}, initOverrides?: RequestInit): Promise<ReadNatServicesResponse> {
        const response = await this.readNatServicesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
